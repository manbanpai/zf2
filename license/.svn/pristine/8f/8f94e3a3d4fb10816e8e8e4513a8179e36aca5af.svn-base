<?php
namespace System\Model;

use Zend\Paginator\Paginator;

use Zend\Paginator\Adapter\DbSelect;

use Zend\Db\TableGateway\TableGateway;
use Zend\Db\ResultSet\ResultSet;
use Zend\Db\Sql\Select;

class UserTable{
	protected $tableGateway;
	
	public function __construct(TableGateway $tg)
	{
		$this->tableGateway = $tg;		
	}
	
	public function deleteUser($id){
		$this->tableGateway->delete(array('id'=>(int) $id));
	}
	
	//保存记录 如果ID存在修改，如果ID不存在添加
	public function saveUser(User $user)
	{
		$data = array(
			'username'=>$user->username,
			'password'=>$user->password,
			'password_rand'=>$user->password_rand,
			'realname'=>$user->realname,
			'tel'=>$user->tel,
			'mobile'=>$user->mobile,
			'position'=>$user->position,
			'extension'=>$user->extension,
			'role_id'=>$user->role_id,
			'email'=>$user->email,
			'qq'=>$user->qq,
				/*
			'password_rand'=>$user->password_rand,
			'last_login_ip'=>$user->last_login_ip,
			'last_login_time'=>$user->last_login_time,
			'login_number'=>$user->login_number,
			'online_status'=>$user->online_status,
			'login_updatetime'=>$user->login_updatetime,
			'password_status'=>$user->password_status,
			'update_password_time'=>$user->update_password_time,
			'password_reset_status'=>$user->password_reset_status,
			'password_expire_date'=>$user->password_expire_date, */
			'createtime'=>$user->createtime,
		);
		$id = (int) $user->id;
		
		if($id == 0){
			$this->tableGateway->insert($data);
		}else{
			if($this->getUser($id)){
				$this->tableGateway->update($data,array('id'=>$id));
			}else{
				return false;
			}
		}
	}
	
	//查询单挑数据
	public function getUser($id)
	{
		$id = (int) $id;
		$rowset = $this->tableGateway->select(array('id'=>$id));
		$row = $rowset->current();
		if(!$row){
			return false;
		}
		return $row;
	}
	
	//查询全部数据
	public function fetchAll($paginated=false)
	{
		//判断是否使用分页
		if($paginated){
			//实例化一个Select，对指定表进行操作
			$select = new Select();
			$select->from(array('t'=>'lic_user'));
			$select->order('id desc');
			$select->join(array('r'=>'lic_user_role'),'r.id=t.role_id',array('role_name'=>'role_name'),$select::JOIN_LEFT);
			//实例化一个结果集，用来保存查询结果
			$resultSetPrototype = new ResultSet();
			//设置结果集的操作属性
			$resultSetPrototype->setArrayObjectPrototype(new User());
			/*
			 * 实例化一个DbSelect，并通过数据网关及select来对
			* 数据库进行操作，并将最终结果传递到$resultSetPrototype
			* 结果集中
			*/
			$paginatorAdapter = new DbSelect(
					$select,
					$this->tableGateway->getAdapter(),
					$resultSetPrototype
			);
			//实例化一个分页导航，并将DbSelect传递过去
			$paginator = new Paginator($paginatorAdapter);
			return $paginator;
		}
		$resultSet = $this->tableGateway->select();
		return $resultSet;
	}
}