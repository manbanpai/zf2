<?php
namespace Log\Controller;

//use Zend\I18n\Filter\NumberFormat;

use Zend\Db\Sql\Expression;

use Zend\Session\Container;

use Zend\View\Model\ViewModel;

use Zend\Mvc\Controller\AbstractActionController;

class LogController extends AbstractActionController
{
	protected $logTable;
	protected $menuTable;
	protected $userTable;
	protected $session;
	
	public function getSess()
	{
		if(!$this->session){
			$this->session = new Container('login');
		}
		return $this->session;
	}
	
	//导出
	public function exportAction()
	{
		$sess = $this->getSess();
		$userId = $roleId = 0;
		
		if($sess->offsetExists('_adminUserId')){
			$userId = $sess->offsetGet('_adminUserId');
		}
		
		$params = array();
		$params['where'] = array(
				'display'=>'1',
				"url!='application/index/welcome'",
				"url!='application/index/index'",
				"url!='log/log/index'",
		);
		
		$time = $this->params()->fromRoute('time');
		$user = $this->params()->fromRoute('user');
		$url = $this->params()->fromRoute('url');
		$ctime = $this->returnCtime($time);
		
		if($url){
			$params['where']['url'] = str_replace('_', '/', $url);
		}
			
		if($time){
			$params['where'][] = "create_time>$ctime";
		}
		
		if($user){
			$params['where']['user_id'] = $user;
		}
		
		$data = $this->getLogTable()->fetchAll($params);
		$count = count($data);
		if($count > 5000)
			$ceil = ceil($count/5000);	
			
	}
	
	public function indexAction()
	{
		$sess = $this->getSess();
		$userId = $roleId = 0;
		$time90 = time()-90*24*2600;
		
		if($sess->offsetExists('_adminUserId')){
			$userId = $sess->offsetGet('_adminUserId');
		}
		
		if($sess->offsetExists('_adminRoleId')){
			$roleId = $sess->offsetGet('_adminRoleId');
		}
		
		$url = $time = $ctime = $user = 0;
		$params = array();
		
		$join = array('join'=>array(
				'name'=>array('u'=>'lic_user'),
				'on'=>'u.id = t.user_id',
				'columns'=>array('username'=>'username'),
		));
		
		if($roleId == 1){
			$params['where'] = array(
					'display'=>'1',
					"url!='application/index/welcome'",
					"url!='application/index/index'",
					"url!='log/log/index'",
					"create_time>$time90",
			);
		}else{
			$params['where'] = array(
					'display'=>'1',
					"url!='application/index/welcome'",
					"url!='application/index/index'",
					"url!='log/log/index'",
					'user_id'=>$userId,
					"create_time>$time90",
			);
		}
		
		$request = $this->getRequest();
		
		if($request->isGet()){
			$url = $request->getQuery('url');
			$time = $request->getQuery('time');
			$user = $request->getQuery('user');
			
			$ctime = $this->returnCtime($time);
		
			if($url){
				$params['where']['url'] = $url;
			}
			
			if($time){
				$params['where'][] = "create_time>$ctime";
			}
			
			if($user){
				$params['where']['user_id'] = $user;
			}
		}

		//个人日志
		$pagin = array('paginated'=>true,'order'=>'id desc',);
		$paginator = $this->getLogTable()->fetchAll(array_merge($params,$join,$pagin));
		$paginator->setCurrentPageNumber((int)$this->params()->fromQuery('page',1));
		$paginator->setItemCountPerPage(10);
		
		//统计
		$data = $this->getLogTable()->fetchAll($params);
		$count = count($data);
		
		//return str
		$str = $this->returnStr($params,$count);
		
		//获取menu
		$menu = $this->getMenuTable()->fetchAll(array(
					'where'=>array('pid!=0','display'=>'Y'),
				));
		
		$users = $this->getUserTable()->fetchAll();

		$view = new ViewModel(array(
				'paginator'=>$paginator,
				'str'=>$str,
				'roleId'=>$roleId,
				'count'=>$count,
				'menu'=>$menu,
				'url'=>$url,
				'time'=>$time,
				'user'=>$user,
				'users'=>$users,
				));
		return $view;
	}
	
	public function returnCtime($time)
	{
		switch ($time){
			case 1:
				return time()-24*3600;
			case 7:
				return time()-7*24*3600;
			case 30:
				return time()-30*24*3600;
			case 90:
				return time()-90*24*2600;
		}
	}
	
	public function returnStr(array $params,$count)
	{
		$columns = array('columns'=>array('c'=>new Expression('COUNT(url)'),'url'));
		$group = array('group'=>'url');
		$arr = $this->getLogTable()->fetchAll(array_merge($params,$group,$columns));
		$str = '';
		foreach($arr as $a){
			$percent = round($a->c/$count,3)*100;
			$name = ucfirst($a->url);
			if($a->url == 'ca/cert/index')
				$str .= "{ name:'$name' , y: $percent, sliced: true, selected: true },";
			else
				$str .= "['$name',$percent],";
		} 
		return $str;
	}
	
	public function getLogTable()
	{
		if(!$this->logTable){
			$sm = $this->getServiceLocator();
			$this->logTable = $sm->get('Log\Model\LogTable');
		}
		return $this->logTable;
	}
	
	public function getMenuTable()
	{
		if(!$this->menuTable){
			$sm = $this->getServiceLocator();
			$this->menuTable = $sm->get('System\Model\MenuTable');
		}
		return $this->menuTable;
	}
	
	public function getUserTable()
	{
		if(!$this->userTable){
			$sm = $this->getServiceLocator();
			$this->userTable = $sm->get('System\Model\UserTable');
		}
		return $this->userTable;
	}
}