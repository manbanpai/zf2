<?php
namespace Application\Model;

use Zend\Paginator\Paginator;

use Zend\Paginator\Adapter\DbSelect;

use Zend\Db\Adapter\Adapter;

use Zend\Db\TableGateway\TableGateway;
use Zend\Db\ResultSet\ResultSet;
use Zend\Db\sql\Select;

class UserRoleTable{
	
	protected $tableGateway;
	
	public function __construct(TableGateway $tg)
	{
		$this->tableGateway = $tg;	
	}
	
	public function deleteUserRole($id)
	{
		$this->tableGateway->delete(array('id'=>(int)$id));
	}
	
	public function saveUserRole(UserRole $userRole)
	{
		$data = array(
			'id'=>$userRole->id,
			'role_name'=>$userRole->role_name,
			'acl'=>$userRole->acl,
			'status'=>$userRole->status,
			'createtime'=>$userRole->createtime,		
		);
		
		$id = (int) $userRole->id;
		
		if($id == 0){
			$this->tableGateway->insert($data);
		}else{
			if($this->getUserRole($id)){
				$this->tableGateway->update($data,array('id'=>$id));
			}else{
				return false;
			}
		}
	}
	
	public function getUserRole($id)
	{
		$id = (int) $id;
		$rowset = $this->tableGateway->select(array('id'=>$id));
		$row = $rowset->current();
		if(!$row){
			return false;
		}
		return $row;
	}
	
	public function fetchAll($paginated=false)
	{
		if($paginated){
			//实例化Select，对表进行操作
			$select = new Select('lic_user_role');
			//实例化结果集，用来保存查询结果
			$resultSetPrototype = new ResultSet();
			//设置结果集操作属性
			$resultSetPrototype->setArrayObjectPrototype(new UserRole());
			
			$paginatorAdapter = new DbSelect(
					$select, 
					$this->tableGateway->getAdapter(),
					$resultSetPrototype
					);
			$paginator = new Paginator($paginatorAdapter);
			return $paginator;
		}
		$resultSet = $this->tableGateway->select();
		return $resultSet;
	}
}